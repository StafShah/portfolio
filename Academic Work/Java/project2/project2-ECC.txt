package project2;

public class SubstitutionCipher extends Cipher implements MessageEncoder, MessageDecoder {
    private int shift;

    public SubstitutionCipher(int shift) {
        this.shift = shift;
    }

    @Override
    public String cipherType() {
        return "SubstitutionCipher";
    }

    @Override
    public String encode(String plainText) {
        StringBuilder encoded = new StringBuilder();
        for (char c : plainText.toCharArray()) {
            encoded.append(shiftChar(c, shift));
        }
        return encoded.toString();
    }

    @Override
    public String decode(String cipherText) {
        StringBuilder decoded = new StringBuilder();
        for (char c : cipherText.toCharArray()) {
            decoded.append(shiftChar(c, -shift));
        }
        return decoded.toString();
    }

    private char shiftChar(char c, int shift) {
        if (Character.isLetter(c)) {
            char base = Character.isLowerCase(c) ? 'a' : 'A';
            return (char) ((c - base + shift + 26) % 26 + base);
        } else {
            return (char) ((c - 32 + shift + 95) % 95 + 32);
        }
    }
}
