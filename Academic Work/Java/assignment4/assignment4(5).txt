/*
-----------------------------------
|           MyInteger              |
-----------------------------------
| - value: int                     |
-----------------------------------
| + MyInteger(value: int)          |
| + getValue(): int                |
| + isEven(): boolean              |
| + isOdd(): boolean               |
| + isPrime(): boolean             |
| + equals(value: int): boolean    |
| + equals(myInt: MyInteger): boolean |
| + static isEven(value: int): boolean |
| + static isOdd(value: int): boolean |
| + static isPrime(value: int): boolean |
| + static isEven(myInt: MyInteger): boolean |
| + static isOdd(myInt: MyInteger): boolean |
| + static isPrime(myInt: MyInteger): boolean |
| + static parseInt(chars: char[]): int |
| + static parseInt(str: String): int |
-----------------------------------
*/

public class MyInteger {
    private int value;

    public MyInteger(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public boolean isEven() {
        return value % 2 == 0;
    }

    public boolean isOdd() {
        return value % 2 != 0;
    }

    public boolean isPrime() {
        if (value <= 1) return false;
        for (int i = 2; i <= Math.sqrt(value); i++) {
            if (value % i == 0) return false;
        }
        return true;
    }

    public static boolean isEven(int value) {
        return value % 2 == 0;
    }

    public static boolean isOdd(int value) {
        return value % 2 != 0;
    }

    public static boolean isPrime(int value) {
        if (value <= 1) return false;
        for (int i = 2; i <= Math.sqrt(value); i++) {
            if (value % i == 0) return false;
        }
        return true;
    }

    public boolean equals(int value) {
        return this.value == value;
    }

    public boolean equals(MyInteger myInt) {
        return this.value == myInt.getValue();
    }

    public static int parseInt(char[] chars) {
        int result = 0;
        for (char c : chars) {
            result = result * 10 + (c - '0'); 
        }
        return result;
    }

    public static int parseInt(String str) {
        int result = 0;
        for (int i = 0; i < str.length(); i++) {
            result = result * 10 + (str.charAt(i) - '0'); 
        }
        return result;
    }

    public static void main(String[] args) {
        MyInteger n1 = new MyInteger(5);
        MyInteger n2 = new MyInteger(24);

        System.out.println("n1 is even? " + n1.isEven());

        System.out.println("n1 is prime? " + n1.isPrime());

        System.out.println("15 is prime? " + MyInteger.isPrime(15));

        char[] chars = {'3', '5', '3', '9'};
        String str = "3539";
        System.out.println(MyInteger.parseInt(chars)); 
        System.out.println(MyInteger.parseInt(str)); 

        System.out.println("n2 is odd? " + n2.isOdd());

        System.out.println("45 is odd? " + MyInteger.isOdd(45));

        System.out.println("n1 is equal to n2? " + n1.equals(n2));

        System.out.println("n1 is equal to 5? " + n1.equals(5));
    }
}
